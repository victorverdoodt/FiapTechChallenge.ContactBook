@page "/contacts"
@using FiapTechChallenge.ContactBook.Application.DTOs.Entities
@using FiapTechChallenge.ContactBook.Presentation.WebApp.Services
@inject ContactsHttpClient ContactsClient

<MudPaper Class="pa-4">
    <MudText Typo="Typo.h6">Contact List</MudText>

    <MudGrid>
        <MudItem xs="12" sm="6">
            <MudSelect T="int?" Label="Select Region" @bind-Value="selectedRegionId" Dense="true" OnChange="async e => await LoadContactsAsync()">
                <MudSelectItem T="int?" Value="null">All Regions</MudSelectItem>
                @foreach (var region in regions)
                {
                    <MudSelectItem T="int?" Value="region.Id">@region.Name</MudSelectItem>
                }
            </MudSelect>
        </MudItem>
    </MudGrid>

    <MudTable Items="contacts" Hover="true" Bordered="true" Striped="true">
        <HeaderContent>
            <MudTh>Name</MudTh>
            <MudTh>Email</MudTh>
            <MudTh>Phone</MudTh>
            <!-- Adicione mais cabeçalhos conforme necessário -->
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Name">@context.Name</MudTd>
            <MudTd DataLabel="Email">@context.Email</MudTd>
            <MudTd DataLabel="Phone">@context.Phone</MudTd>
            <!-- Adicione mais células conforme necessário -->
        </RowTemplate>
    </MudTable>

    <MudPagination @bind-Page="@currentPage" PageSize="pageSize" Total="totalItems" OnPageChanged="async e => await LoadContactsAsync()" />

</MudPaper>

@code {
    private IEnumerable<ResponseContactDto> contacts;
    private IEnumerable<ResponseRegionDto> regions; // Suponha que você tenha um DTO para regiões
    private int? selectedRegionId;
    private int currentPage = 1;
    private int pageSize = 10;
    private int totalItems;

    protected override async Task OnInitializedAsync()
    {
        await LoadRegionsAsync();
        await LoadContactsAsync();
    }

    private async Task LoadRegionsAsync()
    {
        // Substitua por sua chamada para obter a lista de regiões
        regions = await ContactsClient.GetRegionsAsync(); 
    }

    private async Task LoadContactsAsync()
    {
        var dto = new FindContactsByRegionDTO
        {
            RegionId = selectedRegionId,
            Take = pageSize,
            Page = currentPage
        };

        var response = await ContactsClient.GetContactsAsync(dto);
        contacts = response.Data?.ToList();
        totalItems = response.Total;
    }
}
